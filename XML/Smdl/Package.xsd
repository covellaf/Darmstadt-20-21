<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            xmlns:xhtml="http://www.w3.org/1999/xhtml"
            xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore"
            xmlns:Catalogue="http://www.ecss.nl/smp/2019/Smdl/Catalogue"
            xmlns:Package="http://www.ecss.nl/smp/2019/Smdl/Package"
            xmlns:xlink="http://www.w3.org/1999/xlink"
            xmlns:Types="http://www.ecss.nl/smp/2019/Core/Types"
            xmlns:Elements="http://www.ecss.nl/smp/2019/Core/Elements"
            xmlns="http://www.ecss.nl/smp/2019/Smdl/Package"
            targetNamespace="http://www.ecss.nl/smp/2019/Smdl/Package"
            elementFormDefault="unqualified"
            attributeFormDefault="unqualified"
            ecore:package="smdl.package"
            ecore:nsPrefix="Package"
            ecore:documentRoot="PackageDocumentRoot">
   <xsd:annotation>
      <xsd:documentation>This schema defines all metamodel elements that are needed in order to define how implementations of types defined in catalogues are packaged. This includes not only models, which may have different implementations in different packages, but as well all other user-defined types.</xsd:documentation>
      <xsd:documentation>
This file is generated by the UMF XML Schema Generation Tool, version 2.1.0.qualifier.

UML Model Information:
    UML model file:  file:/C:/Data/Projects/ECSS16/Software/Windows/pfritzen/SMP/Src/ecss.smp.smdl/target/xmi/ecss.smp.smdl.xmi
    UML model name:  Obsolete
    UML metamodel:   http://schema.omg.org/spec/UML/2.2
    XMI version:     2.1
    XMI exporter:    UMF XMI Converter (from MagicDraw UML 17.0.2), version 2.1.0.qualifier

XSLT Processing Information:
    Processing date: 2019-10-28T17:05:22.729+01:00
    XSLT processor:  SAXON 8.8.0.7 from Saxonica
    XSLT version:    2.0
    XSLT stylesheet: xmi-to-xsd.xslt
      </xsd:documentation>
   </xsd:annotation>
   <!-- Import UML Component 'Smdl::Catalogue' -->
   <xsd:import namespace="http://www.ecss.nl/smp/2019/Smdl/Catalogue"
               schemaLocation="../Smdl/Catalogue.xsd">
      <xsd:annotation>
         <xsd:documentation>This schema defines all metamodel elements that are needed in order to define models in a catalogue. Catalogues make use of the mechanisms defined in Core Types, e.g. enumerations and structures, and they add reference types (interfaces and components), events and a hierarchical grouping mechanism (namespaces).</xsd:documentation>
      </xsd:annotation>
   </xsd:import>
   <!-- Import UML Component 'xlink' -->
   <xsd:import namespace="http://www.w3.org/1999/xlink" schemaLocation="../xlink.xsd">
      <xsd:annotation>
         <xsd:documentation>Schema for the W3C XML Linking Language (XLink).</xsd:documentation>
      </xsd:annotation>
   </xsd:import>
   <!-- Import UML Component 'Core::Types' -->
   <xsd:import namespace="http://www.ecss.nl/smp/2019/Core/Types"
               schemaLocation="../Core/Types.xsd">
      <xsd:annotation>
         <xsd:documentation>This schema provides basic types and typing mechanisms, together with appropriate value specification mechanisms.</xsd:documentation>
      </xsd:annotation>
   </xsd:import>
   <!-- Import UML Component 'Core::Elements' -->
   <xsd:import namespace="http://www.ecss.nl/smp/2019/Core/Elements"
               schemaLocation="../Core/Elements.xsd">
      <xsd:annotation>
         <xsd:documentation>This schema defines base metaclasses and annotation mechanisms used throughout the SMP Metamodel.</xsd:documentation>
      </xsd:annotation>
   </xsd:import>

   <!-- ======================================== -->
   <!-- UML Package 'Package' -->
   <!-- ======================================== -->
   <!-- This package describes all metamodel elements that are needed in order to define how implementations of types defined in catalogues are packaged. This includes not only models, which may have different implementations in different packages, but as well all other user-defined types. -->

   <!-- UML InstanceSpecification 'Package' -->
   <xsd:element name="Package" type="Package:Package">
      <xsd:annotation>
         <xsd:documentation>The Package element (of type Package) is the root element of an SMDL package.</xsd:documentation>
      </xsd:annotation>
   </xsd:element>

   <!-- ======================================== -->
   <!-- UML Package 'Package::Package' -->
   <!-- ======================================== -->
   <!-- The following figure shows the top-level structure of an SMDL Package document. -->

   <!-- UML Class 'Package' -->
   <xsd:complexType name="Package">
      <xsd:annotation>
         <xsd:documentation>A Package is a Document that references an arbitrary number of types for Implementation. Each of these types (defined in a catalogue) shall be implemented by the package to make it available for use in a simulation.
In addition, a package may reference other packages as a Dependency. This indicates that a type referenced from an implementation in the package requires a type implemented in the referenced package.</xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="Elements:Document">
            <xsd:sequence>
               <xsd:element name="Implementation" minOccurs="0" maxOccurs="unbounded">
                  <xsd:annotation>
                     <xsd:documentation>Collection of types implemented by the package.</xsd:documentation>
                     <xsd:documentation>Link destination type: Types:Type</xsd:documentation>
                     <xsd:appinfo source="http://www.w3.org/1999/xlink">Types:Type</xsd:appinfo>
                  </xsd:annotation>
                  <xsd:complexType ecore:name="ImplementationOfPackage">
                     <xsd:attribute ref="xlink:type" use="prohibited" fixed="simple"/>
                     <xsd:attribute ref="xlink:href" use="required" ecore:name="Type" ecore:reference="Types:Type"/>
                     <xsd:attribute ref="xlink:title" use="optional" ecore:name="TypeName"/>
                  </xsd:complexType>
               </xsd:element>
               <xsd:element name="Dependency" minOccurs="0" maxOccurs="unbounded">
                  <xsd:annotation>
                     <xsd:documentation>Collection of dependencies to other packages.</xsd:documentation>
                     <xsd:documentation>Link destination type: Package:Package</xsd:documentation>
                     <xsd:appinfo source="http://www.w3.org/1999/xlink">Package:Package</xsd:appinfo>
                  </xsd:annotation>
                  <xsd:complexType ecore:name="DependencyOfPackage">
                     <xsd:attribute ref="xlink:type" use="prohibited" fixed="simple"/>
                     <xsd:attribute ref="xlink:href" use="required" ecore:name="Package"
                                    ecore:reference="Package:Package"/>
                     <xsd:attribute ref="xlink:title" use="optional" ecore:name="PackageName"/>
                  </xsd:complexType>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
</xsd:schema>